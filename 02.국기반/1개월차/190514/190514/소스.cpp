// #(전치리 지시자)
// #으로 시작하는 모든 것들은 전처리기이다.
// <iostream> : C++ 콘솔 입출력에 관한 헤더 파일.
// #include : 파일을 포함하는 전처리기 명령어
#include<iostream>
// namespace : 이름공간, C++에서 지원하는 언어
// - 중복된 이름의 충돌을 방지하는 목적.
// - 하나의 프로그램(프로젝트)에는 반드시 하나의 main함수가 존재해야 한다.
using namespace std;

// main 함수 : 프로그램의 시작부분


//void main()
//{
//	/*
	// 주석 : 빌드에서 제외 됨
	// 문장이 2줄 이상 일 때로 묶어서도 처리 가능/**/
//	/*
	// cout (console out)
	// << 추출연산자(cout과 만났을 때)
	// endl (end line) : 개행(줄 바꿈)
	// 문자 2개 이상일 때 ""로 표현 문자열

	// 실행 파일 생성 과정 (빌드과정)

	// 코드작성 -> 전처리기 -> 컴파일 -> 어셈블러 -> 링크 -> exe파일 생성!
	// 1. 코드작성 : 프로그래머가 원시 코드를 작성
	// 2. 전처리기 : 프로그래머가 작성한 원시코드가 원활히 번역이 되도록
	//				 컴파일 전에 적절하게 수정 및 보완을 해주는 단계.
	// 3. 컴파일 단계 : 원시코드 -> 어셈블리어로 번역
	// 4. 어셈블러 단계 : 어셈블리어 -> 바이너리 코드(기계어)로 번역.
	// 5. 링크 단계(링커) : 번역된 기계어들을 하나로 묶는 작업.
	// - .obj파일과 .lib파일을 하나로 묶어 실행파일을 완성한다.
	
//
//	//std::cout << "가나" << std::endl;
//	cout << "가나" << endl;
//
//}